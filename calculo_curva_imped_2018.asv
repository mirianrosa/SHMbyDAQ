
% Programa de Cálculo das Curvas de Impedância
% Autor: Luis Antonio Lopes / Modificado por: Julio Almeida e Mirian Rosa
% -----------------------------------------------------------------------

uiwait(msgbox('Este programa irá executar o cálculo das curvas de impedÂncia a partir dos dados extraídos anteriomente. Clique em OK para prosseguir com a rotina.','Programa de Cálculo de Curvas','modal'));



% O circuito consiste em um transdutor piezoelétrico em série com um
% resistor simples, cuja tensão (VR) será medida pelo NI DAQ USB-6211
% enquanto o piezoelétrico está acoplado à estrutura a ser analizada,
% com o objetivo de se descobrir a corrente total do circuito enquanto
% o USB-6211 o excita com diferentes sinais de entrada para, posterior-
% mente, calcular-se as curvas de impedância da estrutura.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Resistor proposto: 500 Ohms

% Sinais de excitação:
% - chirp (sinal de frequência que varia de zero a 30KHz e tem duração de 1s)
% - aleatório (sinal gerado pela função "randn" com zero de média e 1 de variância)
% - idinput (sinal pseudoaleatório binário previamente gerado pela função "idinput")

% Cálculo das Curvas de Impedância
% --------------------------------

mensagem = helpdlg('Este programa irá executar a rotina de extração de curvas de impedância através do método de impedância eletromecância. Aperte qualquer tecla na tela de comando para prosseguir com a rotina', 'Programa de ensaio SHM-EMI')

pause
;
% Circuito: resistor simples
% Resistor utilizado na dissertação de Mestrado: 470 ohms
% Sinal excitação: chirp (zero a 30KHz e duração de 1s)
%                  aleatório (função "randn" com zero de média e 1 de variância)
%                  idinput

%parametros = inputdlg({'Resistência (ohms - default 470)','Número de ensaios (default 10)','Número medidas por ensaio (default 3)'},'PARÂMETROS') % Inserir valor dos parâmetros
%r1=parametros{1};          % valor resistência (proposta: 470)
r1=500;

%num_ensaios = parametros{2};         % Número de ensaios (proposta: 10)
num_ensaios = 1;
%medidas = parametros{3};             % Número medidas por ensaio (proposta: 3)
medidas = 1;



for i=1:num_ensaios
    
    
    % Modelo 1
        
    % Curva impedância sinal aleatório
        
    for j=1:medidas
    
    [DFT_corrente2(:,j),w] = freqz(out_aleat(:,(j+(i-1)*medidas)));       %Transformada discreta de fourier
    [DFT_tensao2(:,j),w] = freqz(in_aleat(:,(j+(i-1)*medidas)));

    REAL_corrente2(:,j)=abs(DFT_corrente2(:,j));                %Parte real da DFT
    REAL_tensao2(:,j)=abs(DFT_tensao2(:,j));

    Z_media2(:,j)= REAL_tensao2(:,j)./ REAL_corrente2(:,j);
    
    end

    
    Z_media2=Z_media2';
    
    Z_final2=mean(Z_media2);   %Impedância real do circuito
    
    curva_imped_mod1_aleat(i,:)=Z_final2;
        
    % Curva impedância sinal chirp
    
    Z_media2=Z_media2';
    
    for j=1:medidas
    
    [DFT_corrente2(:,j),w] = freqz(out_chirp(:,(j+(i-1)*medidas)));       %Transformada discreta de fourier
    [DFT_tensao2(:,j),w] = freqz(in_chirp(:,(j+(i-1)*medidas)));

    REAL_corrente2(:,j)=abs(DFT_corrente2(:,j));                %Parte real da DFT
    REAL_tensao2(:,j)=abs(DFT_tensao2(:,j));
    
    Z_media2(:,j)= REAL_tensao2(:,j)./ REAL_corrente2(:,j);

    end

    Z_media2=Z_media2';
    
    Z_final2=mean(Z_media2);   %Impedância real do circuito
    
    curva_imped_mod1_chirp(i,:)=Z_final2;
   
    
    % Curva impedância sinal idinput
    
    Z_media2=Z_media2';
    
    for j=1:medidas
    
    [DFT_corrente2(:,j),w] = freqz(out_idinput(:,(j+(i-1)*medidas)));       %Transformada discreta de fourier
    [DFT_tensao2(:,j),w] = freqz(in_idinput(:,(j+(i-1)*medidas)));

    REAL_corrente2(:,j)=abs(DFT_corrente2(:,j));                %Parte real da DFT
    REAL_tensao2(:,j)=abs(DFT_tensao2(:,j));
    
    Z_media2(:,j)= REAL_tensao2(:,j)./ REAL_corrente2(:,j);

    end

    Z_media2=Z_media2';
    
    Z_final2=mean(Z_media2);   %Impedância real do circuito
    
    curva_imped_mod1_idinput(i,:)=Z_final2;
        
    Z_media2=Z_media2';
    
    
end

curva_imped_mod1_aleat=curva_imped_mod1_aleat';
curva_imped_mod1_chirp=curva_imped_mod1_chirp';
curva_imped_mod1_idinput=curva_imped_mod1_idinput';
 
x=0:1:511;
plot(x,curva_imped_mod1_idinput(:,1))